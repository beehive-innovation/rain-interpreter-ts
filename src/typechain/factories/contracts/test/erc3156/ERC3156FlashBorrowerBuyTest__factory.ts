/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../common";
import type {
  ERC3156FlashBorrowerBuyTest,
  ERC3156FlashBorrowerBuyTestInterface,
} from "../../../../contracts/test/erc3156/ERC3156FlashBorrowerBuyTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "tokenA_",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data_",
        type: "bytes",
      },
    ],
    name: "onFlashLoan",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610f30806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c806323e30c8b14610030575b600080fd5b61004361003e366004610796565b610055565b60405190815260200160405180910390f35b600080610064838501856109e3565b905061008873ffffffffffffffffffffffffffffffffffffffff88166001886102e7565b600061009c87670e27c49886e60000610379565b82516040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152919250829173ffffffffffffffffffffffffffffffffffffffff909116906370a0823190602401602060405180830381865afa15801561010e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101329190610c0b565b1461019e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f5052455f4255590000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b81516040517f095ea7b30000000000000000000000000000000000000000000000000000000081523360048201526024810183905273ffffffffffffffffffffffffffffffffffffffff9091169063095ea7b3906044016020604051808303816000875af1158015610214573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102389190610c24565b506040517fb9bf81fa000000000000000000000000000000000000000000000000000000008152339063b9bf81fa90610275908590600401610ca2565b60408051808303816000875af1158015610293573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102b79190610e16565b507f439148f0bbc682ca079e46d6e2c2f0c1e3b820f1a291b069d8882abf8cf18dd99a9950505050505050505050565b6040805173ffffffffffffffffffffffffffffffffffffffff8416602482015260448082018490528251808303909101815260649091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb00000000000000000000000000000000000000000000000000000000179052610374908490610395565b505050565b600061038e8383670de0b6b3a76400006104a1565b9392505050565b60006103f7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661056d9092919063ffffffff16565b80519091501561037457808060200190518101906104159190610c24565b610374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610195565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff858709858702925082811083820303915050806000036104f9578382816104ef576104ef610e3a565b049250505061038e565b80841161050557600080fd5b600084868809600260036001881981018916988990049182028318808302840302808302840302808302840302808302840302808302840302918202909203026000889003889004909101858311909403939093029303949094049190911702949350505050565b606061057c8484600085610584565b949350505050565b606082471015610616576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610195565b73ffffffffffffffffffffffffffffffffffffffff85163b610694576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610195565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516106bd9190610e8d565b60006040518083038185875af1925050503d80600081146106fa576040519150601f19603f3d011682016040523d82523d6000602084013e6106ff565b606091505b509150915061070f82828661071a565b979650505050505050565b6060831561072957508161038e565b8251156107395782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101959190610ea9565b803573ffffffffffffffffffffffffffffffffffffffff8116811461079157600080fd5b919050565b60008060008060008060a087890312156107af57600080fd5b6107b88761076d565b95506107c66020880161076d565b94506040870135935060608701359250608087013567ffffffffffffffff808211156107f157600080fd5b818901915089601f83011261080557600080fd5b81358181111561081457600080fd5b8a602082850101111561082657600080fd5b6020830194508093505050509295509295509295565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff8111828210171561088e5761088e61083c565b60405290565b60405160c0810167ffffffffffffffff8111828210171561088e5761088e61083c565b6040516060810167ffffffffffffffff8111828210171561088e5761088e61083c565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156109215761092161083c565b604052919050565b600067ffffffffffffffff8211156109435761094361083c565b5060051b60200190565b600082601f83011261095e57600080fd5b8135602061097361096e83610929565b6108da565b82815260069290921b8401810191818101908684111561099257600080fd5b8286015b848110156109d857604081890312156109af5760008081fd5b6109b761086b565b6109c08261076d565b81528185013585820152835291830191604001610996565b509695505050505050565b6000602082840312156109f557600080fd5b67ffffffffffffffff8083351115610a0c57600080fd5b8235830160c08186031215610a2057600080fd5b610a28610894565b610a318261076d565b8152610a3f6020830161076d565b60208201526040820135604082015260608201356060820152608082013560808201528260a08301351115610a7357600080fd5b60a08201358201915085601f830112610a8b57600080fd5b610a9861096e8335610929565b82358082526020808301929160051b850101881015610ab657600080fd5b602084015b6020853560051b860101811015610bfb578581351115610ada57600080fd5b803585017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0606081838d03011215610b1157600080fd5b610b196108b7565b8860208401351115610b2a57600080fd5b6020830135830160c083828f03011215610b4357600080fd5b610b4b610894565b9250610b596020820161076d565b8352610b676040820161076d565b602084015260608101356040840152608081013560608401528960a08201351115610b9157600080fd5b610ba48d602060a084013584010161094d565b60808401528960c08201351115610bba57600080fd5b610bcd8d602060c084013584010161094d565b60a0840152509081526040828101356020808401919091526060909301359082015284529283019201610abb565b5060a08301525095945050505050565b600060208284031215610c1d57600080fd5b5051919050565b600060208284031215610c3657600080fd5b8151801515811461038e57600080fd5b600081518084526020808501945080840160005b83811015610c97578151805173ffffffffffffffffffffffffffffffffffffffff1688528301518388015260409096019590820190600101610c5a565b509495945050505050565b6000602080835260e0830173ffffffffffffffffffffffffffffffffffffffff80865116838601528286015160408282168188015280880151915060608281890152808901519250608083818a0152808a0151935060a084818b0152808b0151945060c080818c0152878651808a526101009950898d019150898160051b8e01018b8901985060005b82811015610e03577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008f8303018452895180518984528c8151168a8501528c8f82015116898501528a810151888501528981015187850152888101518760e0860152610d9b610120860182610c46565b90508882015191507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa0858203018f860152610dd68183610c46565b9150508e8201518f8501528a8201518b85015280935050508c8a0199508c84019350600181019050610d2b565b509e9d5050505050505050505050505050565b60008060408385031215610e2957600080fd5b505080516020909101519092909150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60005b83811015610e84578181015183820152602001610e6c565b50506000910152565b60008251610e9f818460208701610e69565b9190910192915050565b6020815260008251806020840152610ec8816040850160208701610e69565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea2646970667358221220c425fdc4581fc5846ce51d6a9fc9eb69e7fb9fb2762bf463e336ee13571bcbec64736f6c63430008110033";

type ERC3156FlashBorrowerBuyTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC3156FlashBorrowerBuyTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC3156FlashBorrowerBuyTest__factory extends ContractFactory {
  constructor(...args: ERC3156FlashBorrowerBuyTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ERC3156FlashBorrowerBuyTest> {
    return super.deploy(
      overrides || {}
    ) as Promise<ERC3156FlashBorrowerBuyTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC3156FlashBorrowerBuyTest {
    return super.attach(address) as ERC3156FlashBorrowerBuyTest;
  }
  override connect(signer: Signer): ERC3156FlashBorrowerBuyTest__factory {
    return super.connect(signer) as ERC3156FlashBorrowerBuyTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC3156FlashBorrowerBuyTestInterface {
    return new utils.Interface(_abi) as ERC3156FlashBorrowerBuyTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC3156FlashBorrowerBuyTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC3156FlashBorrowerBuyTest;
  }
}
