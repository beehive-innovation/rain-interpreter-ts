/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../../../../../common";
import type {
  LibIntegrityStateTest,
  LibIntegrityStateTestInterface,
} from "../../../../../../contracts/test/interpreter/integrity/LibIntegrityState/LibIntegrityStateTest";

const _abi = [
  {
    inputs: [
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
    ],
    name: "applyFn0",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
    ],
    name: "applyFn1",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
    ],
    name: "applyFn2",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
    ],
    name: "applyFn3",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
    ],
    name: "applyFn4",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length_",
        type: "uint256",
      },
    ],
    name: "applyFn5",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length_",
        type: "uint256",
      },
    ],
    name: "applyFn6",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length_",
        type: "uint256",
      },
    ],
    name: "applyFn7",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "length_",
        type: "uint256",
      },
    ],
    name: "applyFn8",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "n_",
        type: "uint256",
      },
    ],
    name: "applyFnN",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "pointer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
        ],
        internalType: "struct StorageOpcodesRange",
        name: "storageOpcodesRange_",
        type: "tuple",
      },
      {
        internalType: "bytes[]",
        name: "sources_",
        type: "bytes[]",
      },
      {
        internalType: "uint256",
        name: "constantsLength_",
        type: "uint256",
      },
      {
        internalType: "uint256[]",
        name: "finalStacks_",
        type: "uint256[]",
      },
    ],
    name: "ensureIntegrity",
    outputs: [
      {
        internalType: "uint256",
        name: "contextScratch_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stackLength_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "sources_",
        type: "bytes[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pointer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
        ],
        internalType: "struct StorageOpcodesRange",
        name: "storageOpcodesRange_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "constantsLength_",
        type: "uint256",
      },
      {
        internalType: "SourceIndex",
        name: "sourceIndex_",
        type: "uint256",
      },
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "minimumFinalStackIndex_",
        type: "uint256",
      },
    ],
    name: "ensureIntegrityTest",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "sources_",
        type: "bytes[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pointer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
        ],
        internalType: "struct StorageOpcodesRange",
        name: "storageOpcodesRange_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "constantsLength_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stackBottom_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stackMaxTop_",
        type: "uint256",
      },
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
    ],
    name: "pop",
    outputs: [
      {
        internalType: "StackTop",
        name: "stackTopAfter_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "sources_",
        type: "bytes[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pointer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
        ],
        internalType: "struct StorageOpcodesRange",
        name: "storageOpcodesRange_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "constantsLength_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stackBottom_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stackMaxTop_",
        type: "uint256",
      },
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "n_",
        type: "uint256",
      },
    ],
    name: "pop",
    outputs: [
      {
        internalType: "StackTop",
        name: "stackTopAfter_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "sources_",
        type: "bytes[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pointer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
        ],
        internalType: "struct StorageOpcodesRange",
        name: "storageOpcodesRange_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "constantsLength_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stackBottom_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stackMaxTop_",
        type: "uint256",
      },
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
    ],
    name: "popUnderflowCheck",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "sources_",
        type: "bytes[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pointer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
        ],
        internalType: "struct StorageOpcodesRange",
        name: "storageOpcodesRange_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "constantsLength_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stackMaxTop_",
        type: "uint256",
      },
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "n_",
        type: "uint256",
      },
    ],
    name: "push",
    outputs: [
      {
        internalType: "StackTop",
        name: "stackTopAfter_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "sources_",
        type: "bytes[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pointer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
        ],
        internalType: "struct StorageOpcodesRange",
        name: "storageOpcodesRange_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "constantsLength_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stackMaxTop_",
        type: "uint256",
      },
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
    ],
    name: "push",
    outputs: [
      {
        internalType: "StackTop",
        name: "stackTopAfter_",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "sources_",
        type: "bytes[]",
      },
      {
        components: [
          {
            internalType: "uint256",
            name: "pointer",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "length",
            type: "uint256",
          },
        ],
        internalType: "struct StorageOpcodesRange",
        name: "storageOpcodesRange_",
        type: "tuple",
      },
      {
        internalType: "uint256",
        name: "constantsLength_",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stackMaxTop_",
        type: "uint256",
      },
      {
        internalType: "StackTop",
        name: "stackTop_",
        type: "uint256",
      },
    ],
    name: "syncStackMaxTop",
    outputs: [
      {
        internalType: "StackTop",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506134b2806100206000396000f3fe608060405234801561001057600080fd5b50600436106101365760003560e01c8063a9563063116100b2578063cc1c411911610081578063e9108ddf11610066578063e9108ddf1461026d578063f0025f5d14610295578063fe41dc40146102a857600080fd5b8063cc1c411914610247578063d14acfc31461025a57600080fd5b8063a9563063146101fb578063ad9af8111461020e578063c826b7ae14610221578063ca4e71b51461023457600080fd5b80636d130d96116101095780638fb90bc1116100ee5780638fb90bc1146101c2578063919de855146101d5578063a57e94cd146101e857600080fd5b80636d130d961461019c57806381890dd9146101af57600080fd5b806308de01341461013b5780631047795b146101615780632aac6066146101765780636752617414610189575b600080fd5b61014e610149366004612aa2565b6102bb565b6040519081526020015b60405180910390f35b61017461016f366004612cbc565b61037f565b005b61014e610184366004612cbc565b6103d8565b61014e610197366004612d2d565b61044a565b61014e6101aa366004612d2d565b61050a565b61014e6101bd366004612d46565b6105c3565b61014e6101d0366004612d2d565b610633565b61014e6101e3366004612cbc565b6106ec565b61014e6101f6366004612d2d565b61074b565b61014e610209366004612d2d565b610804565b61014e61021c366004612cbc565b6108bd565b61014e61022f366004612aa2565b61090e565b61014e610242366004612aa2565b6109c8565b61014e610255366004612d46565b610a82565b61014e610268366004612aa2565b610adf565b61028061027b366004612daf565b610b99565b60408051928352602083019190915201610158565b61014e6102a3366004612e83565b610c57565b61014e6102b6366004612aa2565b610cb6565b600080604051806101000160405280600067ffffffffffffffff8111156102e4576102e4612ac4565b60405190808252806020026020018201604052801561031757816020015b60608152602001906001900390816103025790505b5081526020016040518060400160405280600081526020016000815250815260200160008152602001600081526020016000815260200185815260200160008152602001610363610d70565b905290506103758185610d8086610d8a565b9150505b92915050565b600060405180610100016040528088815260200187815260200186815260200160008152602001858152602001848152602001600081526020016103c1610d70565b905290506103cf8183610dad565b50505050505050565b6000806040518061010001604052808981526020018881526020018781526020016000815260200160008152602001600081526020016000815260200161041d610d70565b90529050610429610e33565b61043581868686610e3b565b5061043e610e33565b50919695505050505050565b600080604051806101000160405280600067ffffffffffffffff81111561047357610473612ac4565b6040519080825280602002602001820160405280156104a657816020015b60608152602001906001900390816104915790505b50815260200160405180604001604052806000815260200160008152508152602001600081526020016000815260200160008152602001848152602001600081526020016104f2610d70565b905290506105038184610f29610f32565b9392505050565b600080604051806101000160405280600067ffffffffffffffff81111561053357610533612ac4565b60405190808252806020026020018201604052801561056657816020015b60608152602001906001900390816105515790505b50815260200160405180604001604052806000815260200160008152508152602001600081526020016000815260200160008152602001848152602001600081526020016105b2610d70565b905290506105038184610f52610f58565b600080604051806101000160405280888152602001878152602001868152602001600081526020016000815260200185815260200160008152602001610607610d70565b90529050610613610e33565b61061d8184610f67565b610625610e33565b60a001519695505050505050565b600080604051806101000160405280600067ffffffffffffffff81111561065c5761065c612ac4565b60405190808252806020026020018201604052801561068f57816020015b606081526020019060019003908161067a5790505b50815260200160405180604001604052806000815260200160008152508152602001600081526020016000815260200160008152602001848152602001600081526020016106db610d70565b905290506105038184610f7c610f58565b600080604051806101000160405280898152602001888152602001878152602001600081526020016000815260200186815260200160008152602001610730610d70565b9052905061073f818585610f84565b98975050505050505050565b600080604051806101000160405280600067ffffffffffffffff81111561077457610774612ac4565b6040519080825280602002602001820160405280156107a757816020015b60608152602001906001900390816107925790505b50815260200160405180604001604052806000815260200160008152508152602001600081526020016000815260200160008152602001848152602001600081526020016107f3610d70565b905290506105038184610f7c610f32565b600080604051806101000160405280600067ffffffffffffffff81111561082d5761082d612ac4565b60405190808252806020026020018201604052801561086057816020015b606081526020019060019003908161084b5790505b50815260200160405180604001604052806000815260200160008152508152602001600081526020016000815260200160008152602001848152602001600081526020016108ac610d70565b905290506105038184610f29610f94565b6000806040518061010001604052808981526020018881526020018781526020016000815260200186815260200185815260200160008152602001610900610d70565b9052905061073f8184610fa5565b600080604051806101000160405280600067ffffffffffffffff81111561093757610937612ac4565b60405190808252806020026020018201604052801561096a57816020015b60608152602001906001900390816109555790505b50815260200160405180604001604052806000815260200160008152508152602001600081526020016000815260200160008152602001858152602001600081526020016109b6610d70565b905290506103758185610f5286610fd2565b600080604051806101000160405280600067ffffffffffffffff8111156109f1576109f1612ac4565b604051908082528060200260200182016040528015610a2457816020015b6060815260200190600190039081610a0f5790505b5081526020016040518060400160405280600081526020016000815250815260200160008152602001600081526020016000815260200185815260200160008152602001610a70610d70565b905290506103758185610fe28661100a565b600080604051806101000160405280888152602001878152602001868152602001600081526020016000815260200185815260200160008152602001610ac6610d70565b90529050610ad48184611028565b979650505050505050565b600080604051806101000160405280600067ffffffffffffffff811115610b0857610b08612ac4565b604051908082528060200260200182016040528015610b3b57816020015b6060815260200190600190039081610b265790505b5081526020016040518060400160405280600081526020016000815250815260200160008152602001600081526020016000815260200185815260200160008152602001610b87610d70565b905290506103758185610f2986611036565b600080600060405180610100016040528087815260200188815260200186815260200160008152602001600081526020016000815260200160008152602001610be0610d70565b9052905060005b8451811015610c3457610c21816000878481518110610c0857610c08612efe565b602002602001015185610e3b909392919063ffffffff16565b5080610c2c81612f5c565b915050610be7565b5060c081015160a082015160808301516020910304925092505094509492505050565b6000806040518061010001604052808a81526020018981526020018881526020016000815260200187815260200186815260200160008152602001610c9a610d70565b90529050610ca9818585611045565b9998505050505050505050565b600080604051806101000160405280600067ffffffffffffffff811115610cdf57610cdf612ac4565b604051908082528060200260200182016040528015610d1257816020015b6060815260200190600190039081610cfd5790505b5081526020016040518060400160405280600081526020016000815250815260200160008152602001600081526020016000815260200185815260200160008152602001610d5e610d70565b905290506103758185610f7c86610fd2565b6060610d7b81611067565b905090565b6000949350505050565b6000610da4610d9d868660038601611045565b8690611028565b95945050505050565b81608001518110158015610dc457508160a0015181105b610e2f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f535441434b5f554e444552464c4f57000000000000000000000000000000000060448201526064015b60405180910390fd5b5050565b6040516000a0565b83516020848102909101015180516000919081015b80821015610eaa57600080600484019350835161ffff8116915061ffff8160101c16925050610ea18982898c60e001518681518110610e9157610e91612efe565b602002602001015163ffffffff16565b96505050610e50565b6080870151602090860304841115610f1e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600f60248201527f4d494e5f46494e414c5f535441434b00000000000000000000000000000000006044820152606401610e26565b509295945050505050565b60009392505050565b6000610f4a610f4385856002611045565b8590611028565b949350505050565b50600090565b6000610f4a610f438585610fa5565b8160a00151811115610e2f5760a09190910152565b600092915050565b6020810282016105038482610f67565b6000610f4a610f4385856003611045565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081016103798382610dad565b6000610da4610d9d868685611045565b6040805160038082526080820190925260609160208201838036833701905050949350505050565b6000610da4611020868660016002870201611045565b869084610f84565b602081016103798382610f67565b6000610da4610d9d8686600286015b6000811561105f57602082028303925061105f8484610dad565b509092915050565b6060600060405180610740016040528061107f603990565b67ffffffffffffffff1667ffffffffffffffff168152602001611277815260200161128681526020016112e18152602001611318815260200161133581526020016113c181526020016113f081526020016114ef8152602001611582815260200161159281526020016115a181526020016115b081526020016115bf815260200161159281526020016115ce81526020016115dd81526020016115ec81526020016115fc815260200161160c815260200161160c815260200161160c815260200161160c81526020016116188152602001611630815260200161163f815260200161164e815260200161165d815260200161166c815260200161167b815260200161168c81526020016116a9815260200161167b81526020016116b881526020016116c781526020016116d681526020016116e581526020016116f5815260200161170581526020016117158152602001611725815260200161173581526020016117458152602001611755815260200161176581526020016117758152602001611785815260200161179581526020016117a481526020016117b381526020016117c281526020016117d181526020016117e081526020016117ef81526020016117ff815260200161180f815260200161181e81526020016118998152509050600061126b826118a8565b9050610503818561191a565b6000610f4a8483611950610f32565b6080830151600090600780851691600386811c1691600587901c16906112ad888786611045565b60808901526112be88838886610e3b565b5060808801516112d090899085610f84565b608090980152509495945050505050565b60c0830151600090600884901c9060ff8516906112ff90838361195c565b60c087015261130e8685611028565b9695505050505050565b600082600381111561132c5761132c612fc3565b50909392505050565b600061134f836113458685610fa5565b8691906000610e3b565b82146113b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4c4f4f505f5348494654000000000000000000000000000000000000000000006044820152606401610e26565b610f4a8483610fa5565b6000600f80841690600485901c16825b82811015610f1e576113e68783876000610e3b565b94506001016113d1565b600060018084169084901c816114785760808601516020908503048110611473576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4f4f425f535441434b5f524541440000000000000000000000000000000000006044820152606401610e26565b6114e5565b856040015181106114e5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f4f4f425f434f4e5354414e545f524541440000000000000000000000000000006044820152606401610e26565b61130e8685611028565b602083015151600090831080159061151257506020808501519081015190510183105b611578576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601060248201527f4f4f425f53544f524147455f52454144000000000000000000000000000000006044820152606401610e26565b610f4a8483611028565b6000610f4a8483611a4486610fd2565b6000610f4a8483611a93610f32565b6000610f4a8483611b28610f58565b6000610f4a8483611b99610f94565b6000610f4a8483611c35610f32565b6000610f4a8483611c8b610f32565b6000610f4a8483611d3a610f94565b6000610f4a8483611d978661100a565b6000610f4a8483611e5186611e5e565b6000610f4a8483611028565b6000610f4a6116278584610fa5565b85906008610f84565b6000610f4a8483611e6b610f58565b6000610f4a8483611e77610f32565b6000610f4a8483611e8d610f32565b6000610f4a8483611ea3610f58565b6000610f4a8483611eaf610f58565b6000612a98610da485848387610fd2565b6000610f4a82611ebb6116a0866001612ff2565b8792919061100a565b6000610f4a8483611ecb610f32565b6000610f4a8483611ed5610f32565b6000610f4a8483611edf610f58565b6000610f4a8483611ee8610f32565b6000610f4a8483611ef286610fd2565b6000610f4a8483611f2d86610fd2565b6000610f4a8483611f5e86610fd2565b6000610f4a8483611f7486610fd2565b6000610f4a8483611f8086610fd2565b6000610f4a8483611f8c86610fd2565b6000610f4a8483611f9886610fd2565b6000610f4a8483611fae86610fd2565b6000610f4a8483611fbd86610fd2565b6000610f4a8483611fc986610fd2565b6000610f4a8483611fd586610fd2565b6000610f4a8483611fe16120a3565b6000610f4a84836120b4610f58565b6000610f4a8483612101610f58565b6000610f4a848361218e610f58565b6000610f4a8483612210610f58565b6000610f4a848361225d610f58565b6000610f4a84836122aa86611036565b6000610f4a848361230186610d8a565b6000610f4a848361239b610f32565b6000601f83168061188b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f4241445f4f504552414e440000000000000000000000000000000000000000006044820152606401610e26565b610da4610d9d868584611045565b6000610f4a84836123fa610f32565b80518190603914611915576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601260248201527f4241445f44594e414d49435f4c454e47544800000000000000000000000000006044820152606401610e26565b919050565b60405182518251602080830286010183111561193557600080fd5b60208102830160405201835261194b8282612412565b505050565b60006105038383612426565b60008282601082106119ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600a60248201527f4f4f425f434f4c554d4e000000000000000000000000000000000000000000006044820152606401610e26565b60108110611a34576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600760248201527f4f4f425f524f57000000000000000000000000000000000000000000000000006044820152606401610e26565b60016010860285011b861761130e565b600081604051602001611a579190613005565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012092915050565b6040517f70a0823100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8281166004830152600091908416906370a08231906024015b602060405180830381865afa158015611b04573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610503919061303b565b60008173ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b75573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610379919061303b565b6040517f4ee2cd7e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301526024820183905260009190851690634ee2cd7e906044015b602060405180830381865afa158015611c11573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f4a919061303b565b6040517f981b24d00000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff84169063981b24d090602401611ae7565b6040517f6352211e0000000000000000000000000000000000000000000000000000000081526004810182905260009073ffffffffffffffffffffffffffffffffffffffff841690636352211e90602401602060405180830381865afa158015611cf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1d9190613054565b73ffffffffffffffffffffffffffffffffffffffff169392505050565b6040517efdd58e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8381166004830152602482018390526000919085169062fdd58e90604401611bf4565b6040517f4e1273f400000000000000000000000000000000000000000000000000000000815260609073ffffffffffffffffffffffffffffffffffffffff851690634e1273f490611dee90869086906004016130c5565b600060405180830381865afa158015611e0b573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610f4a9190810190613128565b80611e5b57600080fd5b50565b6000610da4858584611045565b600061050382846125fd565b6000610f4a82611e8785876125fd565b9061267d565b6000610f4a82611e9d85876125fd565b90612692565b600061050382846126a7565b600061050382846126f6565b60606000841161105f5781610f4a565b6000818314610503565b6000818311610503565b60008115610379565b6000818310610503565b6000828201838110611f045780610375565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9392505050565b600082600003611f3f57506000610379565b82820282848281611f5257611f52612f94565b0403611f045780610375565b6000818311611f6e576000610503565b50900390565b60006105038284612ff2565b600061050382846131ae565b600061050382846132e2565b6000818311611fa75781610503565b5090919050565b6000818310611fa75781610503565b600061050382846132ee565b60006105038284613302565b60006105038284613319565b6040517fd97b2e4800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff84811660048301528381166024830152604482018390526000919086169063d97b2e4890606401602060405180830381865afa158015612060573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612084919061303b565b73ffffffffffffffffffffffffffffffffffffffff1695945050505050565b6000610f4a610f4385856004611045565b60008173ffffffffffffffffffffffffffffffffffffffff1663ec14b06e6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b75573d6000803e3d6000fd5b60008173ffffffffffffffffffffffffffffffffffffffff1663cd3293de6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561214e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121729190613054565b73ffffffffffffffffffffffffffffffffffffffff1692915050565b60008173ffffffffffffffffffffffffffffffffffffffff1663f9020e336040518163ffffffff1660e01b8152600401602060405180830381865afa1580156121db573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121ff919061332c565b600381111561037957610379612fc3565b60008173ffffffffffffffffffffffffffffffffffffffff1663fc0c546a6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561214e573d6000803e3d6000fd5b60008173ffffffffffffffffffffffffffffffffffffffff166347e4bbb96040518163ffffffff1660e01b8152600401602060405180830381865afa158015611b75573d6000803e3d6000fd5b6040517f88d6860400000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff8516906388d6860490611bf4908690869060040161334d565b6040517fcaa0eb3b00000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff86169063caa0eb3b9061235a9087908790879060040161337c565b602060405180830381865afa158015612377573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610da4919061303b565b60008060015b600881116123f25760006123b58683612753565b905060006123c38684612753565b905060006123d18383611f5e565b90506123e1856001860383612803565b945050600190920191506123a19050565b509392505050565b6000610f4a8385600f16600487901c600f168561288d565b600060208301905061194b81838551612933565b60008060008473ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa158015612476573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061249a91906133cb565b509350509250506000821361250b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f4d494e5f424153455f50524943450000000000000000000000000000000000006044820152606401610e26565b836125168242613319565b1061257d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600b60248201527f5354414c455f50524943450000000000000000000000000000000000000000006044820152606401610e26565b610da48573ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa1580156125cb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125ef919061341b565b60ff166125fb8461295b565b905b600080826012036126115783915050610379565b826012111561263d5750601282900361262b81600a6132e2565b6126359085613302565b915050610379565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee820161266c81600a6132e2565b61263590856131ae565b5092915050565b600061050383670de0b6b3a7640000846129cb565b60006105038383670de0b6b3a76400006129cb565b60008160000b6000036126bb575081610379565b60008260000b13156126e3576126d282600a61343e565b6126dc9084613302565b9050610379565b60ff60008390031661266c81600a6132e2565b6000806012830361270a5783915050610379565b82601211156127245750601282900361266c81600a6132e2565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffee820161262b81600a6132e2565b60008160088111156127c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f544945520000000000000000000000000000000000000000000000006044820152606401610e26565b826000036127d25760009150612676565b50507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff016020021c63ffffffff1690565b6000826008811115612871576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f544945520000000000000000000000000000000000000000000000006044820152606401610e26565b505060209190910290811b63ffffffff90911b19919091161790565b60008260088111156128fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600860248201527f4d41585f544945520000000000000000000000000000000000000000000000006044820152606401610e26565b6000855b858110156129275763ffffffff6020820290811b199890981685891b179791506001016128ff565b50959695505050505050565b8060200283015b8084101561295557835183526020938401939092019161293a565b50505050565b6000808212156129c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f53616665436173743a2076616c7565206d75737420626520706f7369746976656044820152606401610e26565b5090565b600080807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff85870985870292508281108382030391505080600003612a2357838281612a1957612a19612f94565b0492505050610503565b808411612a2f57600080fd5b60008486880960026001871981018816978890046003810283188082028403028082028403028082028403028082028403028082028403029081029092039091026000889003889004909101858311909403939093029303949094049190911702949350505050565b612aa061344d565b565b60008060408385031215612ab557600080fd5b50508035926020909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715612b3a57612b3a612ac4565b604052919050565b600067ffffffffffffffff821115612b5c57612b5c612ac4565b5060051b60200190565b6000601f8381840112612b7857600080fd5b82356020612b8d612b8883612b42565b612af3565b82815260059290921b85018101918181019087841115612bac57600080fd5b8287015b84811015612c6157803567ffffffffffffffff80821115612bd15760008081fd5b818a0191508a603f830112612be65760008081fd5b85820135604082821115612bfc57612bfc612ac4565b612c2b887fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08c85011601612af3565b92508183528c81838601011115612c425760008081fd5b8181850189850137506000908201870152845250918301918301612bb0565b50979650505050505050565b600060408284031215612c7f57600080fd5b6040516040810181811067ffffffffffffffff82111715612ca257612ca2612ac4565b604052823581526020928301359281019290925250919050565b60008060008060008060e08789031215612cd557600080fd5b863567ffffffffffffffff811115612cec57600080fd5b612cf889828a01612b66565b965050612d088860208901612c6d565b959895975050505060608401359360808101359360a0820135935060c0909101359150565b600060208284031215612d3f57600080fd5b5035919050565b600080600080600060c08688031215612d5e57600080fd5b853567ffffffffffffffff811115612d7557600080fd5b612d8188828901612b66565b955050612d918760208801612c6d565b949794965050505060608301359260808101359260a0909101359150565b60008060008060a08587031215612dc557600080fd5b612dcf8686612c6d565b9350604085013567ffffffffffffffff80821115612dec57600080fd5b612df888838901612b66565b9450606087013593506080870135915080821115612e1557600080fd5b508501601f81018713612e2757600080fd5b80356020612e37612b8883612b42565b82815260059290921b8301810191818101908a841115612e5657600080fd5b938201935b83851015612e7457843582529382019390820190612e5b565b979a9699509497505050505050565b6000806000806000806000610100888a031215612e9f57600080fd5b873567ffffffffffffffff811115612eb657600080fd5b612ec28a828b01612b66565b975050612ed28960208a01612c6d565b969996985050505060608501359460808101359460a0820135945060c0820135935060e0909101359150565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612f8d57612f8d612f2d565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8082018082111561037957610379612f2d565b815160009082906020808601845b8381101561302f57815185529382019390820190600101613013565b50929695505050505050565b60006020828403121561304d57600080fd5b5051919050565b60006020828403121561306657600080fd5b815173ffffffffffffffffffffffffffffffffffffffff8116811461050357600080fd5b600081518084526020808501945080840160005b838110156130ba5781518752958201959082019060010161309e565b509495945050505050565b604080825283519082018190526000906020906060840190828701845b8281101561311457815173ffffffffffffffffffffffffffffffffffffffff16845292840192908401906001016130e2565b5050508381038285015261130e818661308a565b6000602080838503121561313b57600080fd5b825167ffffffffffffffff81111561315257600080fd5b8301601f8101851361316357600080fd5b8051613171612b8882612b42565b81815260059190911b8201830190838101908783111561319057600080fd5b928401925b82841015610ad457835182529284019290840190613195565b6000826131bd576131bd612f94565b500490565b600181815b8085111561321b57817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0482111561320157613201612f2d565b8085161561320e57918102915b93841c93908002906131c7565b509250929050565b60008261323257506001610379565b8161323f57506000610379565b8160018114613255576002811461325f5761327b565b6001915050610379565b60ff84111561327057613270612f2d565b50506001821b610379565b5060208310610133831016604e8410600b841016171561329e575081810a610379565b6132a883836131c2565b807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff048211156132da576132da612f2d565b029392505050565b60006105038383613223565b6000826132fd576132fd612f94565b500690565b808202811582820484141761037957610379612f2d565b8181038181111561037957610379612f2d565b60006020828403121561333e57600080fd5b81516004811061050357600080fd5b73ffffffffffffffffffffffffffffffffffffffff83168152604060208201526000610f4a604083018461308a565b73ffffffffffffffffffffffffffffffffffffffff84168152826020820152606060408201526000610da4606083018461308a565b805169ffffffffffffffffffff8116811461191557600080fd5b600080600080600060a086880312156133e357600080fd5b6133ec866133b1565b945060208601519350604086015192506060860151915061340f608087016133b1565b90509295509295909350565b60006020828403121561342d57600080fd5b815160ff8116811461050357600080fd5b600061050360ff841683613223565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052605160045260246000fdfea2646970667358221220500d972de01885ade5c6354041a0ff113a65637cde5267eff257b0815d28009564736f6c63430008110033";

type LibIntegrityStateTestConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: LibIntegrityStateTestConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class LibIntegrityStateTest__factory extends ContractFactory {
  constructor(...args: LibIntegrityStateTestConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<LibIntegrityStateTest> {
    return super.deploy(overrides || {}) as Promise<LibIntegrityStateTest>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): LibIntegrityStateTest {
    return super.attach(address) as LibIntegrityStateTest;
  }
  override connect(signer: Signer): LibIntegrityStateTest__factory {
    return super.connect(signer) as LibIntegrityStateTest__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): LibIntegrityStateTestInterface {
    return new utils.Interface(_abi) as LibIntegrityStateTestInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): LibIntegrityStateTest {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as LibIntegrityStateTest;
  }
}
